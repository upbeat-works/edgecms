{
  "name": "edgecms",
  "private": true,
  "type": "module",
  "scripts": {
    "db:migrations:local": "wrangler d1 migrations apply DB --local",
    "db:migrations": "wrangler d1 migrations apply DB --remote",
    "build": "react-router build",
    "cf-typegen": "wrangler types",
    "deploy": "npm run db:migrations && npm run build && wrangler deploy",
    "dev": "npm run db:migrations:local && react-router dev",
    "postinstall": "npm run cf-typegen",
    "preview": "npm run build && vite preview",
    "typecheck": "npm run cf-typegen && react-router typegen && tsc -b",
    "format": "prettier --write ."
  },
  "dependencies": {
    "@ai-sdk/openai": "^2.0.10",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@remix-run/form-data-parser": "^0.10.1",
    "@types/react-window": "^1.8.8",
    "ai": "^5.0.10",
    "better-auth": "1.2.10",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.2",
    "exponential-backoff": "^3.1.2",
    "isbot": "^5.1.27",
    "lucide-react": "^0.524.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-intersection-observer": "^9.16.0",
    "react-router": "^7.5.3",
    "react-window": "^1.8.11",
    "tailwind-merge": "^3.3.1",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@cloudflare/vite-plugin": "^1.0.12",
    "@react-router/dev": "^7.5.3",
    "@tailwindcss/vite": "^4.0.0",
    "@types/node": "^20.19.9",
    "@types/react": "^19.1.2",
    "@types/react-dom": "^19.1.2",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "tailwindcss": "^4.0.0",
    "tw-animate-css": "^1.3.6",
    "typescript": "^5.8.3",
    "vite": "^6.3.3",
    "vite-tsconfig-paths": "^5.1.4",
    "wrangler": "^4.22.0"
  },
  "cloudflare": {
    "bindings": {
      "DB": {
        "description": "D1 database for storing CMS content, user data, translations, and versioning information."
      },
      "CACHE": {
        "description": "KV namespace for caching rendered content, API responses, and temporary data."
      },
      "MEDIA_BUCKET": {
        "description": "R2 bucket for storing uploaded media files, images, and other static assets."
      },
      "BACKUPS_BUCKET": {
        "description": "R2 bucket for storing database backups and version snapshots."
      },
      "RATE_LIMITER": {
        "description": "Rate limiting binding to prevent abuse and control API request frequency."
      },
      "RELEASE_VERSION_WORKFLOW": {
        "description": "Workflow binding for handling content version releases and publishing."
      },
      "ROLLBACK_VERSION_WORKFLOW": {
        "description": "Workflow binding for rolling back to previous content versions."
      },
      "AI_TRANSLATE_WORKFLOW": {
        "description": "Workflow binding for AI-powered translation of missing content keys."
      },
      "AUTH_SECRET": {
        "description": "Secret key for better-auth authentication. Generate using `openssl rand -hex 32`."
      },
      "ADMIN_SIGNUP_PASSWORD": {
        "description": "Secret password required for admin user registration to prevent unauthorized access. Generate using `openssl rand -hex 32`."
      },
      "OPENAI_API_KEY": {
        "description": "OpenAI API key for AI-powered translations. Get from https://platform.openai.com/api-keys"
      }
    }
  }
}
